---
import { getCollection } from "astro:content";
import Layout from "../../layouts/page.astro";

/* 
- Informs Astro about all the possible values for this slug so that these pages can be build at built time
- We can do additional stuff here, which is like making other API calls, fetching related posts etc, so that the same can be added to the markup of the post.
- As this is done at build time, making millions of API calls in not feasible for this. Dynamic rednering might be better suited for the job.
*/
export const getStaticPaths = async () => {
	const blogPosts = await getCollection("blog");

	return blogPosts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
};

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout>
	<h1>{post.data.title}</h1>
	<time datetime={post.data.date.toISOString()}>{post.data.date.toDateString()}</time>
	<Content />
</Layout>
